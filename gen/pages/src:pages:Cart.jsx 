import React, { useContext } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import { motion } from 'framer-motion';
import { Minus, Plus, X, ShoppingBag, ArrowLeft, Truck, Shield } from 'lucide-react';
import { Button } from '@/components/ui/button';
import { toast } from '@/components/ui/use-toast';
import { CartContext } from '@/context/CartContext';
import { ProductContext } from '@/context/ProductContext';

const Cart = () => {
  const { cart, updateQuantity, removeFromCart } = useContext(CartContext);
  const { products } = useContext(ProductContext);
  const navigate = useNavigate();

  const handleRemoveItem = (id, size, color) => {
    removeFromCart(id, size, color);
    toast({ title: "Item removed from cart" });
  };

  const subtotal = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);
  const shipping = subtotal > 100 ? 0 : 10;
  const tax = subtotal * 0.08;
  const total = subtotal + shipping + tax;

  if (cart.length === 0) {
    return (
      <div className="min-h-screen bg-white flex items-center justify-center">
        <div className="text-center max-w-md mx-auto px-4">
          <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} transition={{ duration: 0.6 }}>
            <ShoppingBag className="h-20 w-20 text-gray-300 mx-auto mb-6" />
            <h1 className="text-4xl mb-4">Your cart is empty</h1>
            <p className="text-gray-500 mb-8">Looks like you haven't added anything to your cart yet.</p>
            <Link to="/shop">
              <Button size="lg" className="px-10 py-6 text-base">Continue Shopping</Button>
            </Link>
          </motion.div>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-white">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
        <div className="flex items-center justify-between mb-8">
          <motion.h1 initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} transition={{ duration: 0.6 }} className="text-5xl md:text-6xl">Shopping Cart</motion.h1>
          <Link to="/shop" className="inline-flex items-center gap-2 text-sm text-gray-500 hover:text-black transition-colors"><ArrowLeft className="h-4 w-4" />Continue Shopping</Link>
        </div>
        <div className="grid grid-cols-1 lg:grid-cols-3 gap-12">
          <div className="lg:col-span-2 space-y-6">
            {cart.map((item, index) => (
              <motion.div key={`${item.id}-${item.size}-${item.color}`} initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} transition={{ duration: 0.6, delay: index * 0.1 }} className="flex gap-6 p-6 border border-gray-200 rounded-lg">
                <div className="w-28 h-36 bg-gray-100 rounded-lg overflow-hidden flex-shrink-0">
                  <img  className="w-full h-full object-cover" alt={item.name} src="https://images.unsplash.com/photo-1631367771698-606007aecd52" />
                </div>
                <div className="flex-1 min-w-0">
                  <div className="flex justify-between items-start mb-2">
                    <div>
                      <h3 className="font-sans font-medium text-xl">{item.name}</h3>
                      <p className="text-sm text-gray-500">Size: {item.size} â€¢ Color: {item.color}</p>
                    </div>
                    <button onClick={() => handleRemoveItem(item.id, item.size, item.color)} className="text-gray-400 hover:text-red-500 transition-colors"><X className="h-5 w-5" /></button>
                  </div>
                  <div className="flex items-center justify-between mt-4">
                    <div className="flex items-center border border-gray-300 rounded-md">
                      <button onClick={() => updateQuantity(item.id, item.size, item.color, item.quantity - 1)} className="p-2 hover:bg-gray-100 transition-colors"><Minus className="h-4 w-4" /></button>
                      <span className="px-4 py-2 border-x border-gray-300">{item.quantity}</span>
                      <button onClick={() => updateQuantity(item.id, item.size, item.color, item.quantity + 1)} className="p-2 hover:bg-gray-100 transition-colors"><Plus className="h-4 w-4" /></button>
                    </div>
                    <div className="text-right">
                      <p className="font-medium text-lg">${(item.price * item.quantity).toFixed(2)}</p>
                      <p className="text-sm text-gray-500">${item.price.toFixed(2)} each</p>
                    </div>
                  </div>
                </div>
              </motion.div>
            ))}
          </div>
          <div className="lg:col-span-1">
            <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} transition={{ duration: 0.6, delay: 0.3 }} className="bg-gray-50 p-8 rounded-lg sticky top-24">
              <h2 className="text-3xl mb-6">Order Summary</h2>
              <div className="space-y-4 mb-6 text-lg">
                <div className="flex justify-between"><span>Subtotal</span><span>${subtotal.toFixed(2)}</span></div>
                <div className="flex justify-between text-gray-500"><span>Shipping</span><span>{shipping === 0 ? 'Free' : `$${shipping.toFixed(2)}`}</span></div>
                <div className="flex justify-between text-gray-500"><span>Tax (8%)</span><span>${tax.toFixed(2)}</span></div>
                <div className="border-t pt-4 mt-4">
                  <div className="flex justify-between font-medium text-xl"><span>Total</span><span>${total.toFixed(2)}</span></div>
                </div>
              </div>
              <Button size="lg" className="w-full py-6 text-base mb-4">Proceed to Checkout</Button>
              <div className="space-y-3 text-sm text-gray-500">
                <div className="flex items-center gap-2"><Truck className="h-4 w-4" /><span>Free shipping on orders over $100</span></div>
                <div className="flex items-center gap-2"><Shield className="h-4 w-4" /><span>Secure checkout guaranteed</span></div>
              </div>
            </motion.div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Cart;